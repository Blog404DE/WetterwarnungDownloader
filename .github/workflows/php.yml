name: PHP CI

on:
    pull_request: ~
    push:
        branches:
            - master
            - develop
        tags:
            - '*'
    schedule:
        - cron: 0 14 * * THU

jobs:
    compatiblity-check:
        name: compatibility test
        runs-on: [ubuntu-latest]
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  extensions: simplexml, json, ftp, pdo, zip, zlib, libxml, curl
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v2

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >>$GITHUB_OUTPUT

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest
    coding-style:
        runs-on: [ubuntu-latest]
        name: code-style test
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  extensions: simplexml, json, ftp, pdo, zip, zlib, libxml, curl
                  coverage: none
                  tools: cs2pr, php-cs-fixer, phpcs

            - name: Checkout
              uses: actions/checkout@v2

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >>$GITHUB_OUTPUT

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest

            - name: phpcs
              run: ./vendor/bin/phpcs --report=checkstyle --colors --standard=PSR1 --extensions=php getWetterWarnung.php config.sample.php botLib/* | cs2pr

            - name: phpstan
              run: ./vendor/bin/phpstan analyse --error-format=checkstyle | cs2pr

            - name: php-cs-fixer
              run: PHP_CS_FIXER_IGNORE_ENV=1 ./vendor/bin/php-cs-fixer fix -v --dry-run --format=checkstyle --config=.php-cs-fixer.dist.php | cs2pr
